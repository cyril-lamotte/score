!function(t){"use strict";window.root={app:null,dbName:"score_db",tableName:"config",dbVersion:1,appVersion:"1.8.0 (12 décembre 2018)",appData:{}}}(),root.createDB=function(){var t=root.openDB();t.onupgradeneeded=function(t){(root.db=t.target.result).createObjectStore(root.tableName,{autoIncrement:!0})},t.onsuccess=function(t){root.initVue()}},root.openDB=function(){var t=indexedDB.open(root.dbName,root.dbVersion);return t.onerror=function(t){console.error(t.target.error)},t.onsuccess=function(t){console.log("Request success")},t},root.deleteDb=function(){var t=indexedDB.deleteDatabase(root.dbName);t.onerror=function(t){console.error("Error deleting database.")},t.onsuccess=function(t){console.log("Database deleted.")}},root.mainApp=function(){root.app=new Vue({el:"#app",data:{title:"Score",players:[],score_limit:0,logs:[],winner:null,modal_visible:!1,options_visible:!1,options_filter:"all",modal_name:null,history_visible:!1,total_temp:0,version:root.appVersion},computed:{player_count:function(){var t=0;return this.players.forEach(function(e,o){e.visible&&t++}),t},inactive_player_count:function(){var t=0;return this.players.forEach(function(e,o){e.visible||t++}),t}},mounted:function(){this.getLastDataOrInit(),setTimeout(function(){document.querySelector("body").classList.add("app-is-mounted")},1),window.addEventListener("online",root.updateOnlineStatus()),window.addEventListener("offline",root.updateOnlineStatus())},updated:function(){},methods:{updateTitle:function(t){this.title!=t&&(this.title=root.appData=t,this.waitForSaving())},addPlayer:function(){this.players.push({id:this.player_count+1,name:"Nouveau joueur",score:0,visible:!0,hasHand:!1})},addLog:function(t){this.logs.unshift(t),this.logs=this.logs.slice(0,20)},raz:function(){this.players.forEach(function(t,e){t.score=0}),this.waitForSaving()},waitForSaving:function(t){clearTimeout(root.time),root.time=setTimeout(function(t){root.app.save(t)},2e3,t)},save:function(t={}){root.openDB().onsuccess=function(e){var o=new Date;(root.app.$data.date=("0"+o.getHours()).substr(-2)+":"+("0"+o.getMinutes()).substr(-2)+":"+("0"+o.getSeconds()).substr(-2),!0!==t.no_log)?root.app.compareCurrentStateWithLastrecord().then(function(){root.app.addRecord(e,root.tableName,root.app.$data)}):root.app.addRecord(e,root.tableName,root.app.$data)}},addRecord:function(t,e,o){t.target.result.transaction(e,"readwrite").objectStore(e).add(o)},rollback:function(t){this.getRecord(t).then(function(t){root.app.applyRecord(t)})},getRecord:async function(t){return new Promise(function(e,o){root.openDB().onsuccess=function(o){o.target.result.transaction(root.tableName,"readonly").objectStore(root.tableName).get(t).onsuccess=function(o){o.target.result.idb_key=t,e(o.target.result)}}})},cancel:function(){root.openDB().onsuccess=function(t){t.target.result.transaction(root.tableName,"readonly").objectStore(root.tableName).getAllKeys().onsuccess=function(t){var e=t.target.result,o=e[e.length-1];if(root.app.removeRecord(o),root.app.logs.shift(),e.length>1){var n=e[e.length-2];root.app.rollback(n)}else root.app.raz()}}},getLastKey:async function(t=-1){return new Promise(function(e,o){root.openDB().onsuccess=function(o){o.target.result.transaction(root.tableName,"readonly").objectStore(root.tableName).getAllKeys().onsuccess=function(o){var n=o.target.result;n.length?e(n[n.length+t]):e(!1)}}})},getLast2Keys:async function(){var t=[],e=await root.app.getLastKey(-2),o=await root.app.getLastKey(-1);return o&&(t.push(o),e&&t.unshift(e)),t},getLastDataOrInit:function(){this.getLastKey().then(function(t){t?root.app.getRecord(t).then(function(t){root.app.title=t.title,root.app.score_limit=t.score_limit,root.app.players=t.players,root.app.logs=t.logs}):root.app.initData()})},initData:function(){for(var t=[],e=!0,o=1;o<=4;o++)o>2&&(e=!1),t.push({id:o,name:"Joueur "+o,score:0,visible:e,update:!1,hasHand:1==o});this.players=t},applyRecord:function(t){this.title=t.title,this.players=t.players,this.score_limit=t.score_limit},removeRecord:function(t){root.openDB().onsuccess=function(e){e.target.result.transaction(root.tableName,"readwrite").objectStore(root.tableName).delete(IDBKeyRange.lowerBound(t))}},getLast2Records:async function(){return new Promise(function(t,e){root.openDB().onsuccess=function(o){root.app.getLast2Keys().then(function(n){if(!n.length)return e("No key stored.");o.target.result.transaction(root.tableName,"readonly").objectStore(root.tableName).getAll(IDBKeyRange.lowerBound(n[0]),2).onsuccess=function(e){e.target.result[0]&&(e.target.result[0].idb_key=n[0]),e.target.result[1]&&(e.target.result[1].idb_key=n[1]),t(e.target.result)}})}})},compareCurrentStateWithLastrecord:async function(){return new Promise(function(t,e){root.app.getLastKey().then(function(e){e?root.app.getRecord(e).then(function(e){root.app.showDiffAndLog(e),t(!0)}):(root.app.showDiffAndLog(!1),t(!0))})})},generateLog:function(t){var e="";return e+='<div class="log__synthesis">',e+='<div class="log__row"><span>Limite</span><span>'+t.score_limit+"</span></div>",t.players.forEach(function(t){t.visible&&(e+='<div class="log__row">',e+="  <span>"+t.name+"</span>",e+="  <span>"+t.score+"</span>",e+="</div>")}),e+="</div>"},generateDiffLog:function(t,e){var o="";if(e.title!=t.title&&t&&(o+="<span>Nouveau titre : "+e.title+"</span>"),e.score_limit!=t.score_limit&&t&&(o+='<span class="log__limit">Limite passée de '+t.score_limit+" à <strong>"+e.score_limit+"</strong></span>"),!Object.is(e.players,t.players)){e.players.forEach(function(e){e.visible&&(0==t?o+=root.app.compareScore(0,e):t.players.forEach(function(t){e.id==t.id&&(o+=root.app.compareScore(t.score,e),e.name!=t.name&&(o+='<span class="log__rename">'+t.name+' renommé en <span class="log__new-name">'+e.name+"</span>. </span>"),e.hasHand!=t.hasHand&&e.hasHand&&(o+='<span class="log__rename">La main passe à <span class="log__new-name">'+e.name+"</span>.</span>"))}),0)})}return o&&(o='<div class="log__difftext">'+o+"</div>"),o},compareScore:function(t,e){var o=t-e.score,n="";return o<0?n+='<span class="log__diff">'+e.name+' <strong class="log__score">+'+Math.abs(o)+" point(s).</strong></span>":o>0&&(n+='<span class="log__diff">'+e.name+' <strong class="log__score">-'+Math.abs(o)+" point(s).</strong></span>"),n},showDiffAndLog:function(t){var e=root.app.$data,o={content:this.generateDiffLog(t,e),date:e.date};o.content&&this.addLog(o)},showModal:function(t,e="all"){this.modal_visible=!0,this.options_filter=e,"options"==t&&(this.options_visible=!0),this.modal_name="modal--"+t+"--"+e},hideModal:function(t){document.querySelector(".modal__inner").scrollTop=0,this.modal_visible=!1,"options"==t&&(this.options_visible=!1)},toggle_history:function(){this.history_visible=!this.history_visible},pass_the_hand:function(){var t=null,e=null,o=null;this.players.forEach(function(e,n){e.visible&&null==o&&(o=n),e.hasHand&&(t=n)}),this.players[t].hasHand=!1,e=t+1,void 0!=this.players[e]&&this.players[e].visible||(e=o),this.players[e].hasHand=!0,this.waitForSaving()},show_winner:function(t){this.score_limit>0&&(this.winner=t,this.showModal("options","winner"))},show_confirm:function(t){this.showModal("options","confirm"),this.selectedPlayer=t,this.total_temp=0},setScoreToZero:function(){this.selectedPlayer?this.selectedPlayer.score=0:(this.raz(),this.logs=[]),this.hideModal("options"),this.waitForSaving({no_log:!0})},addValueToTotal(t){this.total_temp+=t},addScore(t){this.selectedPlayer.score+=t,this.hideModal("options"),this.waitForSaving()},play_again:function(){this.hideModal("options"),this.raz()},updateScoreLimit:function(t){this.score_limit=root.appData=parseInt(t),this.waitForSaving()}}})},root.checkCompatibility=function(){"indexedDB"in window||alert("Attention ! Vous pouvez utiliser Score mais votre navigateur ne pourra pas sauvegarder vos parties.")},root.updateOnlineStatus=function(){var t=document.querySelector("body").classList;navigator.onLine?(t.remove("app-is-offline"),t.add("app-is-online")):(t.remove("app-is-online"),t.add("app-is-offline"))},root.players=function(){Vue.component("player",{props:["player","score_limit"],template:'\n  <div class="player" :class="{ \'player--zero-point\': player.score <= 0, \'player--has-hand\': player.hasHand }">\n    <div class="player__header">\n      <p class="player__name" contenteditable="true" @blur="rename($event.target.innerHTML)">{{ player.name }}</p>\n      <p class="player__total" @click.prevent="show_confirm" :class="{ \'anim-bounce\': player.update }"><button type="button" class="player__score">{{player.score}}</button></p>\n    </div>\n    <div class="player__action">\n      <button type="button" @click.prevent="removePoint" class="player__update-btn btn player__update-btn--minus-1"><span class="visually-hidden">Retirer 1 point</span></button>\n      <button type="button" @click.prevent="addPoint" class="player__update-btn btn player__update-btn--plus-1"><span class="visually-hidden">Ajouter 1 point</span></button>\n    </div>\n    <div v-if="remain != score_limit && remain > 0" class="player__remain">\n      Reste <strong>{{ remain }} point(s)</strong>\n    </div>\n  </div>\n  ',computed:{remain:function(){var t=this.score_limit-this.player.score;return t<=0&&this.$emit("we-got-a-winner",this.player),t}},methods:{rename:function(t){this.player.name!=t&&(this.player.name=t,this.$emit("request-save"))},addPoint:function(){this.player.score+=1,this.bounce(),this.$emit("request-save")},removePoint:function(){this.player.score-=1,this.bounce(),this.$emit("request-save")},setToZero:function(){this.player.score=0,this.$emit("request-save")},show_confirm:function(){this.$emit("show-confirm",this.player)},bounce:function(){this.player.update=!0}}}),Vue.component("other_player",{props:["player"],template:'<li><button type="button" @click="setVisible" class="btn">{{ player.name }}</button></li>',methods:{setVisible:function(){this.player.visible=!this.player.visible}}})},root.logs=function(){Vue.component("log",{props:["log"],template:'\n  <li class="log">\n    <span class="log__date">{{ log.date }}</span>\n    <span v-html="log.content" class="log__content"></span>\n  </li>\n  ',computed:{},methods:{rollback:function(t){this.$emit("rollback",t)}}})},function(t){"use strict";root.checkCompatibility(),root.createDB(),root.initVue=function(){root.players(),root.logs(),root.mainApp()}}();