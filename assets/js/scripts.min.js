!function(t){"use strict";window.root={dbName:"score_db",tableName:"players",dbVersion:1,appVersion:"1.0.4 (19/09/2018)"}}(),root.createDB=function(){var t=root.openDB();t.onupgradeneeded=function(t){(root.db=t.target.result).createObjectStore(root.tableName,{autoIncrement:!0}).transaction.oncomplete=function(t){}},t.onsuccess=function(t){root.getLastData()}},root.openDB=function(){var t=indexedDB.open(root.dbName,root.dbVersion);return t.onerror=function(t){console.error(t.target.error)},t.onsuccess=function(t){console.log("Request success")},t},root.deleteDb=function(){var t=indexedDB.deleteDatabase(root.dbName);t.onerror=function(t){console.error("Error deleting database.")},t.onsuccess=function(t){console.log("Database deleted.")}},root.save=function(){root.openDB().onsuccess=function(t){var e=t.target.result,o=root.tableName,n=e.transaction(o,"readwrite");n.oncomplete=function(t){},n.onerror=function(t){console.log("Transaction error.")},n.objectStore(o).add(root.appData).onsuccess=function(){}}},root.initData=function(){for(var t={title:"Score",score_limit:3,players:[]},e=!0,o=1;o<=4;o++)o>2&&(e=!1),t.players.push({id:o,name:"Joueur "+o,score:0,visible:e,update:!1});return t},root.getLastData=function(){root.openDB().onsuccess=function(t){var e=t.target.result.transaction(root.tableName,"readonly").objectStore(root.tableName);e.getAllKeys().onsuccess=function(t){var o=t.target.result,n=o[o.length-1];o.length?e.get(n).onsuccess=function(t){root.appData=t.target.result,root.initVue()}:(root.appData=root.initData(),root.initVue())}}},root.mainApp=function(){new Vue({el:"#app",data:{title:root.appData.title,players:root.appData.players,winner:null,modal_visible:!1,options_visible:!1,options_filter:"all",score_limit:root.appData.score_limit,version:root.appVersion},computed:{player_count:function(){var t=0;return this.players.forEach(function(e,o){e.visible&&t++}),t},inactive_player_count:function(){var t=0;return this.players.forEach(function(e,o){e.visible||t++}),t}},mounted:function(){this.player_count||this.showModal("options")},updated:function(){},methods:{addPlayer:function(){this.players.push({id:this.player_count+1,name:"Joueur X",score:0,visible:!0})},raz:function(){this.players.forEach(function(t,e){t.score=0}),root.save()},showModal:function(t,e="all"){this.modal_visible=!0,this.options_filter=e,"options"==t&&(this.options_visible=!0)},hideModal:function(t){this.modal_visible=!1,"options"==t&&(this.options_visible=!1)},show_winner:function(t){this.winner=t,this.showModal("options","winner")},play_again:function(){this.hideModal("options"),this.raz()},update_score_limit:function(t){this.score_limit=t}}})},root.checkCompatibility=function(){"indexedDB"in window||alert("Attention ! Vous pouvez utiliser Score mais votre navigateur ne pourra pas sauvegarder vos parties.")},root.players=function(){Vue.component("player",{props:["player","score_limit"],template:'\n  <div class="player" :class="{ \'player--zero-point\': player.score <= 0 }">\n    <div class="player__header">\n      <p class="player__name" contenteditable="true" @blur="rename($event.target.innerHTML)">{{ player.name }}</p>\n      <p class="player__total" @click.prevent="setToZero" :class="{ \'anim-bounce\': player.update }"><button type="button" class="player__score">{{player.score}}</button></p>\n    </div>\n    <div class="player__action">\n      <button type="button" @click.prevent="removePoint" class="player__update-btn btn player__update-btn--minus-1"><span class="visually-hidden">Retirer 1 point</span></button>\n      <button type="button" @click.prevent="addPoint" class="player__update-btn btn player__update-btn--plus-1"><span class="visually-hidden">Ajouter 1 point</span></button>\n    </div>\n    <div v-if="remain != score_limit && remain > 0" class="player__remain">\n      Reste <strong>{{ remain }} point(s)</strong>\n    </div>\n  </div>\n  ',computed:{remain:function(){var t=this.score_limit-this.player.score;return t<=0&&this.$emit("we-got-a-winner",this.player),t}},methods:{rename:function(t){this.player.name=t,root.save()},addPoint:function(){this.player.score+=1,this.bounce(),root.save()},removePoint:function(){this.player.score-=1,this.bounce(),root.save()},setToZero:function(){this.player.score=0,root.save()},bounce:function(){this.player.update=!0}}}),Vue.component("other_player",{props:["player"],template:'<li><button type="button" @click="setVisible" class="btn">{{ player.name }}</button></li>',methods:{setVisible:function(){this.player.visible=!this.player.visible}}})},function(t){"use strict";root.checkCompatibility(),root.createDB(),root.initVue=function(){root.players(),root.mainApp()}}();